plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.mitchmele'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation("org.assertj:assertj-core:3.11.1")
	testImplementation 'org.mockito:mockito-core:2.8.47'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

task standUpMongo(type: Exec) {
	workingDir "$rootDir/docker"
	description "Standup MongoDb"
	commandLine "./start_mongo.sh"
}


task standDownMongo(type: Exec) {
	workingDir "$rootDir/docker"
	description "StandDown MongoDb"
	commandLine "docker-compose", "down"
}

task standUp() {
	group "Testing Infrastructure - Gemfire"
	dependsOn 'buildDockerImages'
}


task integrationTest(type: Test) {
	description 'IT tests'

	scanForTestClasses = false

	useJUnitPlatform {
		includeTags 'integrationTest'
	}
	testLogging {
		events "passed", "skipped", "failed"
		showStackTraces true
		exceptionFormat "full"
	}
}


